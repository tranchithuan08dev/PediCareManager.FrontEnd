import React from 'react';
import { Card, Descriptions, Table, Typography, Layout, Divider } from 'antd';
import 'antd/dist/reset.css'; // Import CSS c·ªßa Ant Design

const { Header, Content } = Layout;
const { Title } = Typography;

// D·ªØ li·ªáu JSON b·∫°n ƒë√£ cung c·∫•p
const medicalData = {
  patient: {
    patientCode: "BN-2222337-01345461",
    fullName: "Nguy·ªÖn VƒÉn Mi8nh",
    dateOfBirth: "1990-03-15",
    gender: "male",
    address: "123 Nguy·ªÖn Tr√£i, Qu·∫≠n 1, TP. H·ªì Ch√≠ Minh",
    representativeName: "Nguy·ªÖn Th·ªã Hoa",
    representativePhone: "0905123456"
  },
  medicalRecord: {
    symptoms: "Ho khan, ƒëau h·ªçng, m·ªát m·ªèi, s·ªët nh·∫π 38.5¬∞C trong 2 ng√†y",
    diagnosis: "Vi√™m h·ªçng c·∫•p do virus",
    treatment: "ƒêi·ªÅu tr·ªã kh√°ng vi√™m, h·∫° s·ªët, ngh·ªâ ng∆°i, u·ªëng nhi·ªÅu n∆∞·ªõc",
    notes: "B·ªánh nh√¢n c√≥ ti·ªÅn s·ª≠ d·ªã ·ª©ng paracetamol, c·∫ßn l∆∞u √Ω khi k√™ thu·ªëc",
    nextAppointmentDate: "2025-11-03",
    weightKg: 65.5,
    heightCm: 172.0,
    patientAgeAtVisit: 35,
    clinicalFindings: "H·ªçng ƒë·ªè, kh√¥ng c√≥ m·ªß, ph·ªïi th√¥ng kh√≠ t·ªët, kh√¥ng ran",
    bodyTemperature: 38.5,
    heartRate: 88,
    respiratoryRate: 18,
    bmi: 22.1,
    bloodPressure: "120/80",
    drugAllergy: "Paracetamol"
  },
  prescription: {
    items: [
      {
        medicineId: 1,
        quantity: 10,
        dosage: "500mg",
        usageInstruction: "U·ªëng 1 vi√™n sau ƒÉn, ng√†y 2 l·∫ßn"
      },
      {
        medicineId: 2,
        quantity: 5,
        dosage: "10mg",
        usageInstruction: "U·ªëng bu·ªïi t·ªëi tr∆∞·ªõc khi ng·ªß 1 vi√™n"
      }
    ]
  },
  createdBy: 1
};

// ƒê·ªãnh nghƒ©a c·ªôt cho B·∫£ng ƒê∆°n thu·ªëc
const prescriptionColumns = [
  {
    title: 'M√£ Thu·ªëc (ID)',
    dataIndex: 'medicineId',
    key: 'medicineId',
  },
  {
    title: 'Li·ªÅu L∆∞·ª£ng',
    dataIndex: 'dosage',
    key: 'dosage',
  },
  {
    title: 'S·ªë L∆∞·ª£ng',
    dataIndex: 'quantity',
    key: 'quantity',
  },
  {
    title: 'H∆∞·ªõng D·∫´n S·ª≠ D·ª•ng',
    dataIndex: 'usageInstruction',
    key: 'usageInstruction',
  },
];

const PatientRecordDisplay = () => {
  const { patient, medicalRecord, prescription } = medicalData;

  // X·ª≠ l√Ω d·ªØ li·ªáu B·ªánh nh√¢n
  const patientItems = [
    { label: 'M√£ B·ªánh Nh√¢n', children: patient.patientCode },
    { label: 'H·ªç T√™n', children: patient.fullName },
    { label: 'Ng√†y Sinh', children: patient.dateOfBirth },
    { label: 'Gi·ªõi T√≠nh', children: patient.gender === 'male' ? 'Nam' : 'N·ªØ' },
    { label: 'Tu·ªïi', children: medicalRecord.patientAgeAtVisit },
    { label: 'ƒê·ªãa Ch·ªâ', children: patient.address, span: 2 },
    { label: 'Ng∆∞·ªùi ƒê·∫°i Di·ªán', children: patient.representativeName },
    { label: 'SƒêT ƒê·∫°i Di·ªán', children: patient.representativePhone },
  ];

  // X·ª≠ l√Ω d·ªØ li·ªáu H·ªì s∆° Y t·∫ø (chia th√†nh 2 nh√≥m: T·ªïng quan v√† Ch·ªâ s·ªë sinh t·ªìn)
  const medicalOverviewItems = [
    { label: 'Tri·ªáu Ch·ª©ng', children: medicalRecord.symptoms, span: 3 },
    { label: 'Ch·∫©n ƒêo√°n', children: medicalRecord.diagnosis, span: 3 },
    { label: 'ƒêi·ªÅu Tr·ªã', children: medicalRecord.treatment, span: 3 },
    { label: 'D·ªã ·ª®ng Thu·ªëc', children: medicalRecord.drugAllergy, span: 3 },
    { label: 'Ghi Ch√∫ ƒê·∫∑c Bi·ªát', children: medicalRecord.notes, span: 3 },
    { label: 'Ng√†y T√°i Kh√°m', children: medicalRecord.nextAppointmentDate },
  ];
  
  const vitalSignsItems = [
    { label: 'C√¢n N·∫∑ng (kg)', children: medicalRecord.weightKg },
    { label: 'Chi·ªÅu Cao (cm)', children: medicalRecord.heightCm },
    { label: 'BMI', children: medicalRecord.bmi },
    { label: 'Huy·∫øt √Åp', children: medicalRecord.bloodPressure },
    { label: 'Nhi·ªát ƒê·ªô (¬∞C)', children: medicalRecord.bodyTemperature },
    { label: 'Nh·ªãp Tim (bpm)', children: medicalRecord.heartRate },
    { label: 'Nh·ªãp Th·ªü (l·∫ßn/ph√∫t)', children: medicalRecord.respiratoryRate },
    { label: 'Kh√°m L√¢m S√†ng', children: medicalRecord.clinicalFindings, span: 2 },
  ];

  return (
    <Layout>
      <Header style={{ background: '#001529', padding: 0 }}>
        <Title level={3} style={{ color: 'white', lineHeight: '64px', marginLeft: 20 }}>
          H·ªì S∆° Kh√°m B·ªánh üßë‚Äç‚öïÔ∏è
        </Title>
      </Header>
      <Content style={{ padding: '24px 50px', background: '#f0f2f5' }}>
        <div className="site-layout-content" style={{ padding: 24, background: '#fff' }}>

          {/* 1. Th√¥ng tin B·ªánh nh√¢n */}
          <Card title="Th√¥ng Tin B·ªánh Nh√¢n" style={{ marginBottom: 24 }}>
            <Descriptions bordered column={{ xs: 1, sm: 2, md: 3 }} items={patientItems} />
          </Card>

          {/* 2. H·ªì s∆° Y t·∫ø */}
          <Card title="H·ªì S∆° Y T·∫ø (Kh√°m L√¢m S√†ng)" style={{ marginBottom: 24 }}>
            <Title level={5}>Ch·ªâ S·ªë Sinh T·ªìn</Title>
            <Descriptions bordered column={{ xs: 1, sm: 2, md: 4 }} items={vitalSignsItems} />
            
            <Divider />
            
            <Title level={5}>K·∫øt Qu·∫£ Kh√°m v√† ƒêi·ªÅu Tr·ªã</Title>
            <Descriptions bordered column={3} items={medicalOverviewItems} />
          </Card>

          {/* 3. ƒê∆°n Thu·ªëc */}
          <Card title="ƒê∆°n Thu·ªëc ƒê√£ K√™" style={{ marginBottom: 24 }}>
            <Table
              columns={prescriptionColumns}
              dataSource={prescription.items.map((item, index) => ({ ...item, key: index }))} // Th√™m key
              pagination={false}
              bordered
            />
          </Card>

        </div>
      </Content>
    </Layout>
  );
};

export default PatientRecordDisplay;